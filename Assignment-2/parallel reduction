#include <iostream>
#include <cstdlib>
#include <ctime>
#include <mpi.h>

int main(int argc, char* argv[]) {
    MPI_Init(&argc, &argv); 

    int rank, size;
    MPI_Comm_rank(MPI_COMM_WORLD, &rank);  
    MPI_Comm_size(MPI_COMM_WORLD, &size); 

    
    const int N = 100;
    int local_n = N / size;
    
    
    int* local_array = new int[local_n];
    srand(rank);  
    for (int i = 0; i < local_n; ++i) {
        local_array[i] = rand() % 10 + 1;  
    }

   
    int local_sum = 0;
    for (int i = 0; i < local_n; ++i) {
        local_sum += local_array[i];
    }

    
    int global_sum = 0;
    MPI_Reduce(&local_sum, &global_sum, 1, MPI_INT, MPI_SUM, 0, MPI_COMM_WORLD);

    
    if (rank == 0) {
        std::cout << "Global sum is: " << global_sum << std::endl;
    }

   
    delete[] local_array;
    MPI_Finalize();  
    return 0;
}
