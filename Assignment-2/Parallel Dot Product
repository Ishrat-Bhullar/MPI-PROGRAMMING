#include <iostream>
#include <cstdlib>
#include <ctime>
#include <mpi.h>


double local_dot_product(double* A, double* B, int local_n) {
    double local_sum = 0.0;
    for (int i = 0; i < local_n; i++) {
        local_sum += A[i] * B[i];
    }
    return local_sum;
}

int main(int argc, char** argv) {
    MPI_Init(&argc, &argv);  

    int rank, size;
    MPI_Comm_rank(MPI_COMM_WORLD, &rank);  
    MPI_Comm_size(MPI_COMM_WORLD, &size);  

    const int N = 1000;  
    int local_n = N / size;  

  
    double* local_A = new double[local_n];
    double* local_B = new double[local_n];
    srand(rank + 1);

    
    for (int i = 0; i < local_n; i++) {
        local_A[i] = rand() % 10 + 1;  
        local_B[i] = rand() % 10 + 1;
    }

    
    double local_result = local_dot_product(local_A, local_B, local_n);

    
    double global_result = 0.0;
    MPI_Reduce(&local_result, &global_result, 1, MPI_DOUBLE, MPI_SUM, 0, MPI_COMM_WORLD);

    
    if (rank == 0) {
        std::cout << "Dot Product: " << global_result << std::endl;
    }

    
    delete[] local_A;
    delete[] local_B;

    MPI_Finalize(); 
    return 0;
}
